spring:
  application:
    name: TheSocial
  data:
    mongodb:
      uri: ${MONGODB_URL}
      auto-index-creation: true
      # Configuration for DocumentReference loading
      repositories:
        enabled: true
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
      enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOSTRAP_SERVER}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
server:
  port: 8082
  host: ${SERVER_HOST:172.20.82.76}
  servlet:
    context-path: /api/v1
  cors: ${CORS_URL}

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_DURATION}
  refreshable: ${JWT_REFRESH_DURATION}

# Local file storage configuration
file:
  upload-dir: ${FILE_UPLOAD_DIR:uploads}

logging:
  level:
    org.apache.kafka.clients.NetworkClient: ERROR
    org.apache.kafka.clients.admin.AdminClient: ERROR
